{"version":3,"sources":["webpack:///./lib/terra-dev-site/doc/application/how-to.2/change-application-theme.doc.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"gMAYMA,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,sBACD,OAAO,cALS,UAKT,OAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAQ,CACN,GAAM,uCADR,uCAGA,6EAA0D,4BAAYC,WAAW,KAAvB,aAA1D,6BACA,gCACE,mBAAGA,WAAW,cAAd,2BAAuD,uBAAGA,WAAW,KAAQ,CACzE,KAAQ,mGAD2C,mCAAvD,gFAIF,yBAAK,0BAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,8ZAuBTJ,EAAWK,gBAAiB","file":"60-c0fa938888128bc4eddb.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"how-to-change-the-application-theme\"\n    }}>{`How To Change the Application Theme`}</h1>\n    <p>{`The theme used by the application is set using the `}<inlineCode parentName=\"p\">{`themeName`}</inlineCode>{` prop on ApplicationBase.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: Please review the `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/cerner/terra-toolkit/tree/master/scripts/aggregate-themes#theme-aggregation\"\n        }}>{`theme aggregation documentation`}</a>{` to ensure the proper configuration is in place for themeable applications.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`  import React from 'react';\n+ import CernerClinicalTheme from 'cerner-clinical-theme/scoped-theme';\n\n  import ApplicationBase from 'terra-application/lib/application-base';\n\n  const ExampleApp = () => (\n    <ApplicationBase\n      locale=\"en-us\"\n+     themeIsGlobal\n+     themeName={CernerClinicalTheme.themeName}\n    >\n      {...}\n    </ApplicationBase>\n  );\n\n  export default ExampleApp;\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}