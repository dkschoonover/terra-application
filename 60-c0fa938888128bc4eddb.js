(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{899:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return m}));var a=n(14),o=n.n(a),p=n(23),i=n.n(p),r=(n(0),n(275)),c={};function m(e){var t=e.components,n=i()(e,["components"]);return Object(r.mdx)("wrapper",o()({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("h1",{id:"how-to-change-the-application-theme"},"How To Change the Application Theme"),Object(r.mdx)("p",null,"The theme used by the application is set using the ",Object(r.mdx)("inlineCode",{parentName:"p"},"themeName")," prop on ApplicationBase."),Object(r.mdx)("blockquote",null,Object(r.mdx)("p",{parentName:"blockquote"},"Note: Please review the ",Object(r.mdx)("a",o()({parentName:"p"},{href:"https://github.com/cerner/terra-toolkit/tree/master/scripts/aggregate-themes#theme-aggregation"}),"theme aggregation documentation")," to ensure the proper configuration is in place for themeable applications.")),Object(r.mdx)("pre",null,Object(r.mdx)("code",o()({parentName:"pre"},{className:"language-diff"}),"  import React from 'react';\n+ import CernerClinicalTheme from 'cerner-clinical-theme/scoped-theme';\n\n  import ApplicationBase from 'terra-application/lib/application-base';\n\n  const ExampleApp = () => (\n    <ApplicationBase\n      locale=\"en-us\"\n+     themeIsGlobal\n+     themeName={CernerClinicalTheme.themeName}\n    >\n      {...}\n    </ApplicationBase>\n  );\n\n  export default ExampleApp;\n")))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=60-c0fa938888128bc4eddb.js.map